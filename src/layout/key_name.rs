#[cfg(feature = "serde-serialize")]
use serde::{Deserialize, Serialize};
use std::fmt::{Display, Formatter};

/// Liste of keys. Some key might be missing.
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
#[cfg_attr(feature = "serde-serialize", derive(Serialize, Deserialize))]
#[non_exhaustive]
#[allow(missing_docs)]
pub enum KeyName {
    /// key not listed or other key
    Unbound,
    Escape,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    PrintScreen,
    ScrollLock,
    Break,
    WheelUp,
    WheelDown,
    /// §
    Section,
    Key1,
    Key2,
    Key3,
    Key4,
    Key5,
    Key6,
    Key7,
    Key8,
    Key9,
    Key0,
    /// '
    Apostrophe,
    /// ^
    Caret,
    BackSpace,
    Tab,
    Q,
    W,
    E,
    R,
    T,
    Z,
    U,
    I,
    O,
    P,
    EGrave,
    /// ¨
    Diaeresis,
    CapsLock,
    A,
    S,
    D,
    F,
    G,
    H,
    J,
    K,
    L,
    EAcute,
    AGrave,
    Dolar,
    Enter,
    LeftShift,
    LessThan,
    Y,
    X,
    C,
    V,
    B,
    N,
    M,
    Comma,
    Dot,
    Dash,
    RightShift,
    LeftControl,
    /// Meta left
    Super,
    Alt,
    Space,
    AltGr,
    Function,
    /// Meta right
    Menu,
    RightControl,
    Insert,
    Home,
    PageUp,
    PageDown,
    Delete,
    End,
    NumLock,
    NumDivide,
    NumMultiply,
    NumMinus,
    NumPlus,
    NumEnter,
    NumDot,
    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,
    Num0,
    ArrowUp,
    ArrowDown,
    ArrowLeft,
    ArrowRight,
}

impl Default for KeyName {
    /// Returns [`Self::Unbound`]
    fn default() -> Self {
        Self::Unbound
    }
}

impl KeyName {
    /// Get a secprition for the key
    #[allow(clippy::non_ascii_literal)]
    pub const fn description(self) -> &'static str {
        use KeyName::*;
        match self {
            Unbound => "unbound",
            Escape => "Escape",
            F1 => "F1",
            F2 => "F2",
            F3 => "F3",
            F4 => "F4",
            F5 => "F5",
            F6 => "F6",
            F7 => "F7",
            F8 => "F8",
            F9 => "F9",
            F10 => "F10",
            F11 => "F11",
            F12 => "F12",
            PrintScreen => "print screen",
            ScrollLock => "scoll lock",
            Break => "break",
            WheelUp => "wheel up",
            WheelDown => "wheel down",
            Section => "§",
            Key1 => "1",
            Key2 => "2",
            Key3 => "3",
            Key4 => "4",
            Key5 => "5",
            Key6 => "6",
            Key7 => "7",
            Key8 => "8",
            Key9 => "9",
            Key0 => "0",
            Apostrophe => "'",
            Caret => "^",
            BackSpace => "back space",
            Tab => "tab",
            Q => "Q",
            W => "W",
            E => "E",
            R => "R",
            T => "T",
            Z => "Z",
            U => "U",
            I => "I",
            O => "O",
            P => "P",
            EGrave => "è",
            Diaeresis => "¨",
            CapsLock => "caps lock",
            A => "A",
            S => "S",
            D => "D",
            F => "F",
            G => "G",
            H => "H",
            J => "J",
            K => "K",
            L => "L",
            EAcute => "é",
            AGrave => "à",
            Dolar => "$",
            Enter => "enter",
            LeftShift => "left shift",
            LessThan => "<",
            Y => "Y",
            X => "X",
            C => "C",
            V => "V",
            B => "B",
            N => "N",
            M => "M",
            Comma => ",",
            Dot => ".",
            Dash => "-",
            RightShift => "right shift",
            LeftControl => "left control",
            Super => "super",
            Alt => "alt",
            Space => "space",
            AltGr => "altgr",
            Function => "fn",
            Menu => "menu",
            RightControl => "right controle",
            Insert => "insert",
            Home => "home",
            PageUp => "pageup",
            PageDown => "pagedown",
            Delete => "delete",
            End => "end",
            NumLock => "num lock",
            NumDivide => "/",
            NumMultiply => "*",
            NumMinus => "-",
            NumPlus => "+",
            NumEnter => "enter",
            NumDot => "num.",
            Num1 => "num1",
            Num2 => "num2",
            Num3 => "num3",
            Num4 => "num4",
            Num5 => "num5",
            Num6 => "num6",
            Num7 => "num7",
            Num8 => "num8",
            Num9 => "num9",
            Num0 => "num0",
            ArrowUp => "arrow up",
            ArrowDown => "arrow down",
            ArrowLeft => "arrow left",
            ArrowRight => "arrow right",
        }
    }
}

impl Display for KeyName {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", self.description())
    }
}
