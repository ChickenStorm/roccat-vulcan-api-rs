var searchIndex = JSON.parse('{\
"roccat_vulcan_api_rs":{"doc":"roccat-vulcan-api-rs","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,13,13,13,18,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,4,3,3,3,13,13,8,3,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["A","AGrave","Alt","AltGr","Apostrophe","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","B","BackSpace","Break","C","CapsLock","Caret","ColorBuffer","ColorRgb","ColorRgba","Comma","ControlDeviceError","D","DEFAULT_MODEL","Dash","Delete","Diaeresis","Dolar","Dot","E","EAcute","EGrave","End","Enter","ErrorRoccatVulcanApi","Escape","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","Function","G","H","HidApiError","HidInterfaceFilter","Home","Hue","I","Insert","InvalidInput","J","K","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KeyInfo","KeyLight","KeyName","KeyPress","KeyboardApi","KeyboardIntrefacesFilter","KeyboardNotFound","L","Layout","LayoutFrCh","LedDeviceError","LeftControl","LeftShift","LessThan","M","Menu","N","NUMBER_KEY_LED_BUFFER","NoControlDevice","NoLedDevice","NoReadDevice","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumDivide","NumDot","NumEnter","NumLock","NumMinus","NumMultiply","NumPlus","O","P","PageDown","PageUp","Position","PrintScreen","Q","R","ReadDeviceError","RightControl","RightShift","S","Saturation","ScrollLock","Section","Space","Super","T","Tab","U","Unbound","V","Value","W","WaitedToMuchTime","WheelDown","WheelUp","X","Y","Z","add","add_assign","alpha","b","b","b_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","code_mut","color","control_interface","control_interface_mut","default","default","default","default","default","default","default","default","default","default","default","default","default","default","degree","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","find_from_key_code","find_from_key_code","find_from_key_light","find_from_key_light","find_from_key_name","find_from_key_name","first_u8","first_u8_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_element","from_u32","from_u32","g","g","g_mut","get","get_led_buffer","get_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index_mut","interface_number","interface_number_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_hsv","into_u32","into_u32","is_pressed","is_pressed_mut","iter","iter_mut","key_code","key_code_light","key_code_light_mut","key_code_mut","key_code_press","key_code_press_mut","key_name","key_name_mut","layout","layout","layout_key_info","led_interface","led_interface_mut","length","match_filter","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new_from_array","new_from_buffer","new_from_degree","new_from_float","new_from_model_list","new_from_radiant","new_hsv","new_model","new_with_usage_page","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","product_id","product_id_mut","r","r","r_mut","radiant","read_interface","read_interface_mut","read_key_press","render","seconde_u8","seconde_u8_mut","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage_page","usage_page_mut","value","value","vulcan_100","vulcan_120","wait_for_key_press","x","x_mut","y","y_mut"],"q":["roccat_vulcan_api_rsd":["","","","","’","","","","","","","","","","^","Encode the set of color for [<code>crate::KeyboardApi::render</code>].","RGB color representation","Color with alpha parameter","","Control device error","","Array containg the default models.","","","¨","","","","","","","","Error returned by the API","","","","","","","","","","","","","","","","","","error while trying the get the hdiapi.","Basic HID interface filter with a product id and an …","","Color hue. Gauranties that the value is between 0 and 1.","","","Invalide input","","","","","","","","","","","","","structur of data to incode the key when a key press is …","associative data for a key.","Code for key light. This represent the key position in …","Liste of keys. Some key might be missing.","Key press event from the read device.","Main API","liste the filter for the differents devices used by […","No keyboard detected.","","Defines a Keyboard layout","Swiss French Layout","LED device error","","","","","Meta right","","Size of the [<code>ColorBuffer</code>].","Control device not found","LED device not found","Read device not found","","","","","","","","","","","","","","","","","","","","","","Represent the position of a key","","","","Read device error","","","","Color saturation, gauranties that the value is between 0 …","","§","","Meta left","","","","key not listed or other key","","Color value (also called brigthness). Gauranties that the …","","Too much time elapsed while wating for the device to be …","","","","","","","","Return the transparency value (0: tranparent, 255: opaque)","Get the blue itensity","Get the blue value taking into account the luminosity","Get the blue itensity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the buffer as an array","Get a mutable reference to the buffer as an array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the key code.","Get the key code as mutbale.","Return the row collor without the alpha","Get the control interface.","Get the control interface as a mutable reference.","","","Create a new Hue with value <code>0_f64</code>","","","","","","","","Returns [<code>Self::Unbound</code>]","","","","Get the hue in degree","Get a secprition for the key","","","","","","","","","","","","","","","","","","","","","","","","","Find key info from a [<code>KeyCode</code>]","Find key info from a [<code>KeyCode</code>]","Find key info from a [<code>KeyLight</code>]","Find key info from a [<code>KeyLight</code>]","Find key info from y [<code>KeyName</code>]","Find key info from y [<code>KeyName</code>]","First u8 of the code.","First u8 of the code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a buffer from an array","Create the buffer with the same color for each key","Create the color form a u32. The number is encoded as …","Convert the color to an u32","Get the green itensity","Get the green value taking into account the luminosity","Get the green itensity","See …","Get an array of u8 that is ready to be send to the led …","See …","","","","","","","","","","","Panic","Panic","Get the interface numer.","Get the interface numer as a mut reference.","","","","","","","","","","","","","","","","","Convert the color into a color RGB mixing it with black","Get the Hue Saturation Value representation of this color.","Retrn the color as a u32 encoded as <code>0x00_RR_GG_BB</code>","Convert the color to an u32","Is pressed event.","Is pressed event.","Returns an iterator in the colors","Return an mutable iterator on the colors","Get the key code.","Get the key code ofr the led.","Get the key code ofr the led.","Get the key code.","Get the key code for press events","Get the key code for press events","Get the key name","Get the key name","returns the layout","","Get the array of [<code>KeyInfo</code>]","Get the led interface.","Get the led interface as a mutable reference.","Get the distance from the origin","returns whether or not a device match the filter","","","","","","","","","","","","","","Look for the default configuration","Create a bew color from rgb values","Create a new value if <code>s</code> is between 0 and 1 both included. …","Create a new value between 0 and 1","Create a new RGBA color","Create a new buffer with default values","Create a new [<code>HidInterfaceFilter</code>]","Initialize a configuration","Create a new event from a [<code>KeyCode</code>] and a [<code>bool</code>]","Create a new key code","Create a new position","Create a new [<code>KeyLight</code>]","Create a new key info.","create [<code>ColorRgb</code>] form <code>[R, G, B]</code>","read key press from buffer hid read buffer.","Create a hue from an angle in degree","Create a new RGBA color with the alpa value given by a […","Initialize the API by seraching for a keyboard matching …","Create a new hue from an angle in radiant","Create a new colow with hue, saturation and value space","Initialize the API uing from a interface info.","Create a new filter with an usage page","","","","","","","","","","","","","","","Get the product id.","Get the product id as a mut ref.","Get the red itensity","Get the red value taking into account the luminosity","Get the red itensity","Get the hue in radiant","Get the read interface.","Get the read interface as a mutable reference.","read key press for a time of at least duration and return …","Renders a collor buffer","Seconde u8 of the code.","Seconde u8 of the code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the usage page","Get a mut reference to the usage page","Get the value warpped","Get the value warpped","Default vulcan 100 info.","Default vulcan 120 info.","Block the thread until a key event or an error occur","Get x coordinate","Get x coordinate","Get the y coordinate","Get the y coordinate"],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,2,1,3,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,0,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,2,1,0,0,2,1,1,1,1,1,1,0,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,2,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,2,1,1,1,1,1,4,4,5,6,5,6,7,6,8,9,5,10,2,11,3,12,13,14,1,4,15,16,7,6,8,9,5,10,2,11,3,12,13,14,1,4,15,16,10,10,6,8,9,5,10,11,3,12,13,14,1,4,15,16,6,8,9,5,10,11,3,12,13,14,1,4,15,16,6,8,9,5,10,11,3,12,13,14,1,15,15,15,5,3,3,6,8,9,5,10,11,3,12,13,14,1,4,15,16,9,1,6,5,11,3,12,13,14,1,15,7,6,8,9,5,10,11,3,12,13,14,1,4,15,16,17,17,17,17,17,17,14,14,6,6,6,6,6,6,8,8,9,9,5,5,5,5,5,5,10,10,2,2,11,11,3,3,12,12,13,13,14,14,1,1,4,4,15,15,15,15,15,15,15,15,16,7,6,6,6,6,6,8,9,5,5,5,10,10,2,11,3,12,13,14,14,14,14,1,4,15,16,10,10,6,5,6,5,6,10,10,10,6,5,10,11,3,12,13,14,1,15,10,10,11,11,7,6,8,9,5,10,2,11,3,12,13,14,1,4,15,16,5,6,6,5,13,13,10,10,13,16,16,13,16,16,16,16,17,12,12,3,3,4,11,6,8,9,5,10,11,3,13,14,4,15,16,4,7,6,8,9,5,10,11,12,13,14,4,15,16,6,13,9,5,7,9,6,7,11,6,8,9,5,10,11,3,12,13,14,1,4,15,16,11,11,6,5,6,9,3,3,7,7,14,14,6,5,11,3,12,13,14,1,15,2,4,4,6,8,9,5,10,11,3,12,13,14,1,4,15,16,6,8,9,5,10,2,11,3,12,13,14,1,4,15,7,6,8,9,5,10,2,11,3,12,13,14,1,4,15,16,7,6,8,9,5,10,2,11,3,12,13,14,1,4,15,16,7,6,8,9,5,10,2,11,3,12,13,14,1,4,15,16,11,11,8,9,3,3,7,4,4,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["colorrgb",3]],[[],["saturation",3]],[[],["hue",3]],[[],["colorrgba",3]],[[],["colorbuffer",3]],[[],["hidinterfacefilter",3]],[[],["keyboardintrefacesfilter",3]],[[],["layoutfrch",3]],[[],["keypress",3]],[[],["keycode",3]],[[],["keyname",4]],[[],["position",3]],[[],["keylight",3]],[[],["keyinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["colorrgb",3]],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[["colorrgba",3]],["ordering",4]],[[["colorbuffer",3]],["ordering",4]],[[["hidinterfacefilter",3]],["ordering",4]],[[["keyboardintrefacesfilter",3]],["ordering",4]],[[["layoutfrch",3]],["ordering",4]],[[["keypress",3]],["ordering",4]],[[["keycode",3]],["ordering",4]],[[["keyname",4]],["ordering",4]],[[["keylight",3]],["ordering",4]],[[],["u8",15]],[[],["u8",15]],[[],["colorrgb",3]],[[],["hidinterfacefilter",3]],[[],["hidinterfacefilter",3]],[[],["colorrgb",3]],[[]],[[]],[[],["colorrgba",3]],[[]],[[],["hidinterfacefilter",3]],[[]],[[]],[[],["keypress",3]],[[],["keycode",3]],[[]],[[],["position",3]],[[],["keylight",3]],[[],["keyinfo",3]],[[],["f64",15]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["colorrgb",3]],["bool",15]],[[["saturation",3]],["bool",15]],[[["hue",3]],["bool",15]],[[["colorrgba",3]],["bool",15]],[[["colorbuffer",3]],["bool",15]],[[["hidinterfacefilter",3]],["bool",15]],[[["keyboardintrefacesfilter",3]],["bool",15]],[[["layoutfrch",3]],["bool",15]],[[["keypress",3]],["bool",15]],[[["keycode",3]],["bool",15]],[[["keyname",4]],["bool",15]],[[["position",3]],["bool",15]],[[["keylight",3]],["bool",15]],[[["keyinfo",3]],["bool",15]],[[["keycode",3]],[["keyinfo",3],["option",4]]],[[["keycode",3]],[["keyinfo",3],["option",4]]],[[["keylight",3]],[["keyinfo",3],["option",4]]],[[["keylight",3]],[["keyinfo",3],["option",4]]],[[["keyname",4]],[["keyinfo",3],["option",4]]],[[["keyname",4]],[["keyinfo",3],["option",4]]],[[],["u8",15]],[[],["u8",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["colorrgba",3]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[["colorrgb",3]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["keypress",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["sliceindex",8]],["option",4]],[[]],[[["sliceindex",8]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["i32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["colorrgb",3]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["keycode",3]],[[],["keylight",3]],[[],["keylight",3]],[[],["keycode",3]],[[],["keycode",3]],[[],["keycode",3]],[[],["keyname",4]],[[],["keyname",4]],[[]],[[]],[[]],[[],["hidinterfacefilter",3]],[[],["hidinterfacefilter",3]],[[],["f64",15]],[[["deviceinfo",3]],["bool",15]],[[["colorrgb",3]],["bool",15]],[[["saturation",3]],["bool",15]],[[["hue",3]],["bool",15]],[[["colorrgba",3]],["bool",15]],[[["colorbuffer",3]],["bool",15]],[[["hidinterfacefilter",3]],["bool",15]],[[["keyboardintrefacesfilter",3]],["bool",15]],[[["keypress",3]],["bool",15]],[[["keycode",3]],["bool",15]],[[["position",3]],["bool",15]],[[["keylight",3]],["bool",15]],[[["keyinfo",3]],["bool",15]],[[]],[[],[["errorroccatvulcanapi",4],["result",4]]],[[["u8",15]]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["u8",15]]],[[]],[[["i32",15],["u16",15]]],[[]],[[["keycode",3],["bool",15]]],[[["u8",15]]],[[["f64",15]]],[[["u8",15]]],[[["keycode",3],["keylight",3],["keyname",4],["position",3]]],[[]],[[]],[[["f64",15]],["option",4]],[[["u8",15],["f32",15]]],[[["hidapi",3]],[["errorroccatvulcanapi",4],["result",4]]],[[["f64",15]],["option",4]],[[["value",6],["hue",3],["saturation",3]]],[[["keyboardintrefacesfilter",3],["hidapi",3]],[["errorroccatvulcanapi",4],["result",4]]],[[["i32",15],["u16",15]]],[[["colorrgb",3]],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[["colorrgba",3]],[["option",4],["ordering",4]]],[[["colorbuffer",3]],[["option",4],["ordering",4]]],[[["hidinterfacefilter",3]],[["option",4],["ordering",4]]],[[["keyboardintrefacesfilter",3]],[["option",4],["ordering",4]]],[[["layoutfrch",3]],[["option",4],["ordering",4]]],[[["keypress",3]],[["option",4],["ordering",4]]],[[["keycode",3]],[["option",4],["ordering",4]]],[[["keyname",4]],[["option",4],["ordering",4]]],[[["position",3]],[["option",4],["ordering",4]]],[[["keylight",3]],[["option",4],["ordering",4]]],[[["keyinfo",3]],[["option",4],["ordering",4]]],[[],["u16",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["f64",15]],[[],["hidinterfacefilter",3]],[[],["hidinterfacefilter",3]],[[["duration",3]],[["errorroccatvulcanapi",4],["result",4],["vec",3]]],[[["colorbuffer",3]],[["errorroccatvulcanapi",4],["result",4]]],[[],["u8",15]],[[],["u8",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["error",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["u16",15]]],[[],["option",4]],[[],["f64",15]],[[],["f64",15]],[[]],[[]],[[],[["result",4],["errorroccatvulcanapi",4],["keypress",3]]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]]],"p":[[4,"KeyName"],[4,"ErrorRoccatVulcanApi"],[3,"KeyboardIntrefacesFilter"],[3,"Position"],[3,"ColorRgba"],[3,"ColorRgb"],[3,"KeyboardApi"],[3,"Saturation"],[3,"Hue"],[3,"ColorBuffer"],[3,"HidInterfaceFilter"],[3,"LayoutFrCh"],[3,"KeyPress"],[3,"KeyCode"],[3,"KeyLight"],[3,"KeyInfo"],[8,"Layout"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};